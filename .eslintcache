[{"C:\\Re\\recipe-finder\\recipe\\src\\index.js":"1","C:\\Re\\recipe-finder\\recipe\\src\\reportWebVitals.js":"2","C:\\Re\\recipe-finder\\recipe\\src\\App.js":"3","C:\\Re\\recipe-finder\\recipe\\src\\LoginContext.js":"4","C:\\Re\\recipe-finder\\recipe\\src\\Routing.js":"5","C:\\Re\\recipe-finder\\recipe\\src\\styles\\Global.js":"6","C:\\Re\\recipe-finder\\recipe\\src\\components\\Navbar\\Navbar.js":"7","C:\\Re\\recipe-finder\\recipe\\src\\components\\About\\About.js":"8","C:\\Re\\recipe-finder\\recipe\\src\\components\\pages\\Home.js":"9","C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\SignOut.js":"10","C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\Login.js":"11","C:\\Re\\recipe-finder\\recipe\\src\\components\\Navbar\\Menu.js":"12","C:\\Re\\recipe-finder\\recipe\\src\\components\\Navbar\\CollapseMenu.js":"13","C:\\Re\\recipe-finder\\recipe\\src\\components\\Navbar\\Brand.js":"14","C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\AccountServices.js":"15","C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\LoginForm.js":"16"},{"size":494,"mtime":1611877928128,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1611648203436,"results":"19","hashOfConfig":"18"},{"size":1596,"mtime":1611877928117,"results":"20","hashOfConfig":"18"},{"size":2274,"mtime":1611878160907,"results":"21","hashOfConfig":"18"},{"size":1505,"mtime":1611877928119,"results":"22","hashOfConfig":"18"},{"size":534,"mtime":1611877928129,"results":"23","hashOfConfig":"18"},{"size":2912,"mtime":1611902792630,"results":"24","hashOfConfig":"18"},{"size":246,"mtime":1611776823545,"results":"25","hashOfConfig":"18"},{"size":570,"mtime":1611776823555,"results":"26","hashOfConfig":"18"},{"size":539,"mtime":1611877928124,"results":"27","hashOfConfig":"18"},{"size":1366,"mtime":1611877928122,"results":"28","hashOfConfig":"18"},{"size":919,"mtime":1611648203419,"results":"29","hashOfConfig":"18"},{"size":1892,"mtime":1611877928127,"results":"30","hashOfConfig":"18"},{"size":1034,"mtime":1611877928126,"results":"31","hashOfConfig":"18"},{"size":1738,"mtime":1611877928121,"results":"32","hashOfConfig":"18"},{"size":2045,"mtime":1611877928123,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"pv4xea",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Re\\recipe-finder\\recipe\\src\\index.js",[],["70","71"],"C:\\Re\\recipe-finder\\recipe\\src\\reportWebVitals.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\App.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\LoginContext.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\Routing.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\styles\\Global.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\Navbar\\Navbar.js",["72","73","74","75"],"C:\\Re\\recipe-finder\\recipe\\src\\components\\About\\About.js",["76"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass About extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br></br>\r\n        <p> HelloWorld! </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About;","C:\\Re\\recipe-finder\\recipe\\src\\components\\pages\\Home.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\SignOut.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\Login.js",["77"],"/*\r\nFile: Login.js\r\n?: This is the login page. It contains a LoginForm to login.\r\n*/ \r\nimport React from 'react';\r\nimport LoginForm from './LoginForm';\r\nimport { useLoginStatus } from '../../LoginContext'\r\nimport './Login.css';\r\n\r\n//Think of something like this as an import\r\nvar authenticate = require('./AccountServices.js');\r\n\r\n\r\nfunction Login() {\r\n    \r\n    //Get ability to change loginStatus (from LoginContext) \r\n    const { toggleLoginStatus } = useLoginStatus();\r\n\r\n    //Comes email and password with userdatabase (handled in AccountServices.js)\r\n    const Login = (email, password) => {\r\n        //For monitoring, should be removed later on\r\n        console.log(email);\r\n        \r\n        //Get authentication results and either change the loginStatus or give an alert for incorrect information\r\n        var Promise = authenticate.authenticate(email, password).then((result) => {\r\n            if (result) {\r\n                toggleLoginStatus(email);\r\n                window.location.reload(false);\r\n               \r\n            } else {\r\n                alert(\"Username/Password Combination Incorrect\");\r\n            }\r\n        });\r\n    }\r\n\r\n    //Simlpy returns (renders) a LoginForm which is defined in LoginForm.js\r\n    return (\r\n        <>\r\n            <LoginForm Login={Login} /> \r\n        </>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default Login; ","C:\\Re\\recipe-finder\\recipe\\src\\components\\Navbar\\Menu.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\Navbar\\CollapseMenu.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\Navbar\\Brand.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\AccountServices.js",["78"],"/*\r\nFile: AccountServices.js\r\n?: This is where our user registration, login authentication, and hashing passwords occur. \r\n*/\r\n\r\n// import React, { useState, createContext } from 'react';\r\n// import { useLoginStatus } from '../../LoginContext'\r\nconst bcrypt = require('bcryptjs');\r\n//Need to do: npm install bcryptjs in your recipe directory through terminal\r\n\r\n//Export the functions\r\nexport {\r\n    authenticate,\r\n    register\r\n};\r\n\r\n//Test user\r\nconst adminUser = {\r\n    name: \"Alek\",\r\n    email: \"test@test.test\",\r\n    password: \"12345\"\r\n}\r\n\r\n//Currently empty, but this is where registering users will occur. Need backend\r\nasync function register(name, email, password) {\r\n    \r\n}\r\n\r\n//Determines if params email and password match users in our database.\r\n//Currently only compares to the test case! \r\nasync function authenticate(email, password) {\r\n    if (email === adminUser.email && password === adminUser.password) {\r\n        console.log(\"Success! Log in.\");\r\n        return true;\r\n    } else {\r\n        console.log(\"Unsuccessful log in.\");\r\n        return false;\r\n    }\r\n}\r\n\r\n//Returns hash of a password. Used to incrypt passwords for safe keeping.\r\n//Note that if you wanted to compare a bcrypt hash with a string, you can call \r\n//              bcrypt.compare(password, hashedPassword);\r\n//But for our purposes, we can search our database for the username then use this compare! \r\n//This would be done in authenticate\r\nconst hashPassword = async (password, saltRounds = 10) => {\r\n    try {\r\n        // create salt\r\n        const salt = await bcrypt.genSalt(saltRounds);\r\n\r\n        // Hash\r\n        return await bcrypt.hash(password, salt);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    \r\n    return null;\r\n}","C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\LoginForm.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":9,"column":10,"nodeType":"85","messageId":"86","endLine":9,"endColumn":16},{"ruleId":"83","severity":1,"message":"87","line":9,"column":18,"nodeType":"85","messageId":"86","endLine":9,"endColumn":23},{"ruleId":"83","severity":1,"message":"88","line":9,"column":25,"nodeType":"85","messageId":"86","endLine":9,"endColumn":31},{"ruleId":"83","severity":1,"message":"89","line":10,"column":26,"nodeType":"85","messageId":"86","endLine":10,"endColumn":46},{"ruleId":"83","severity":1,"message":"90","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":16},{"ruleId":"83","severity":1,"message":"91","line":25,"column":13,"nodeType":"85","messageId":"86","endLine":25,"endColumn":20},{"ruleId":"83","severity":1,"message":"92","line":46,"column":7,"nodeType":"85","messageId":"86","endLine":46,"endColumn":19},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'useLoginUpdateStatus' is defined but never used.","'ReactDOM' is defined but never used.","'Promise' is assigned a value but never used.","'hashPassword' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]