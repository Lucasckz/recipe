[{"C:\\Re\\recipe-finder\\recipe\\src\\index.js":"1","C:\\Re\\recipe-finder\\recipe\\src\\App.js":"2","C:\\Re\\recipe-finder\\recipe\\src\\reportWebVitals.js":"3","C:\\Re\\recipe-finder\\recipe\\src\\LoginContext.js":"4","C:\\Re\\recipe-finder\\recipe\\src\\styles\\Global.js":"5","C:\\Re\\recipe-finder\\recipe\\src\\components\\Navbar\\Navbar.js":"6","C:\\Re\\recipe-finder\\recipe\\src\\Routing.js":"7","C:\\Re\\recipe-finder\\recipe\\src\\components\\About\\About.js":"8","C:\\Re\\recipe-finder\\recipe\\src\\components\\Navbar\\Brand.js":"9","C:\\Re\\recipe-finder\\recipe\\src\\components\\Navbar\\Menu.js":"10","C:\\Re\\recipe-finder\\recipe\\src\\components\\Navbar\\CollapseMenu.js":"11","C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\SignOut.js":"12","C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\Login.js":"13","C:\\Re\\recipe-finder\\recipe\\src\\components\\pages\\Home.js":"14","C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\AccountServices.js":"15","C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\LoginForm.js":"16","C:\\Re\\recipe-finder\\recipe\\src\\components\\Ingredients\\Ingredients.js":"17","C:\\Re\\recipe-finder\\recipe\\src\\components\\Ingredients\\IngredientsForm.js":"18","C:\\Re\\recipe-finder\\recipe\\src\\components\\Pantry\\Pantry.js":"19","C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\index.js":"20","C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\SignUp.js":"21","C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\SignUpForm.js":"22"},{"size":494,"mtime":1611877928128,"results":"23","hashOfConfig":"24"},{"size":1644,"mtime":1612313228091,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1611648203436,"results":"26","hashOfConfig":"24"},{"size":2274,"mtime":1611878160907,"results":"27","hashOfConfig":"24"},{"size":534,"mtime":1611877928129,"results":"28","hashOfConfig":"24"},{"size":2912,"mtime":1611902792630,"results":"29","hashOfConfig":"24"},{"size":2001,"mtime":1612245917670,"results":"30","hashOfConfig":"24"},{"size":4711,"mtime":1612313228096,"results":"31","hashOfConfig":"24"},{"size":1034,"mtime":1611877928126,"results":"32","hashOfConfig":"24"},{"size":919,"mtime":1611648203419,"results":"33","hashOfConfig":"24"},{"size":1885,"mtime":1611957977119,"results":"34","hashOfConfig":"24"},{"size":539,"mtime":1611877928124,"results":"35","hashOfConfig":"24"},{"size":1356,"mtime":1612245917674,"results":"36","hashOfConfig":"24"},{"size":2019,"mtime":1612313228137,"results":"37","hashOfConfig":"24"},{"size":1738,"mtime":1611877928121,"results":"38","hashOfConfig":"24"},{"size":2362,"mtime":1612245917675,"results":"39","hashOfConfig":"24"},{"size":1287,"mtime":1611965722043,"results":"40","hashOfConfig":"24"},{"size":707,"mtime":1611965722056,"results":"41","hashOfConfig":"24"},{"size":0,"mtime":1611955828163,"results":"42","hashOfConfig":"24"},{"size":129,"mtime":1612245917676,"results":"43","hashOfConfig":"24"},{"size":438,"mtime":1612245917675,"results":"44","hashOfConfig":"24"},{"size":2123,"mtime":1612245917676,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"pv4xea",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Re\\recipe-finder\\recipe\\src\\index.js",[],["96","97"],"C:\\Re\\recipe-finder\\recipe\\src\\App.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\reportWebVitals.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\LoginContext.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\styles\\Global.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\Navbar\\Navbar.js",["98","99","100","101"],"import React from 'react'\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated, config } from \"react-spring\";\r\n\r\nimport Brand from \"./Brand\";\r\nimport BurgerMenu from \"./Menu\";\r\nimport CollapseMenu from \"./CollapseMenu\";\r\n\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\nimport { useLoginStatus, useLoginUpdateStatus } from '../../LoginContext'\r\n\r\nconst Navbar = (props) => {\r\n  const barAnimation = useSpring({\r\n    from: { transform: 'translate3d(0, -10rem, 0)' },\r\n    transform: 'translate3d(0, 0, 0)',\r\n  });\r\n\r\n  const linkAnimation = useSpring({\r\n    from: { transform: 'translate3d(0, 30px, 0)', opacity: 0 },\r\n    to: { transform: 'translate3d(0, 0, 0)', opacity: 1 },\r\n    delay: 800,\r\n    config: config.wobbly,\r\n  });\r\n\r\n  const { loginStatus } = useLoginStatus();\r\n\r\n  return (\r\n    <>\r\n      <NavBar style={barAnimation}>\r\n        <FlexContainer>\r\n          <Brand />\r\n          <NavLinks style={linkAnimation}>\r\n            <a href=\"../pages/Home.js\" onClick={props.handleNavbar}>Home</a>\r\n            <a href=\"../pages/Pantry.js\" onClick={props.handleNavbar}>Your Pantry</a>\r\n            <a href=\"../Ingredients/Ingredients.js\" onClick={props.handleNavbar}>Add Ingredients</a>\r\n            <a href=\"../About/About.js\" onClick={props.handleNavbar}>About / Contact</a>\r\n            {(loginStatus === undefined) ? <a href=\"../login\" onClick={props.handleNavbar}>Login</a> \r\n            : <a href=\"../signout\" onClick={props.handleNavbar}>Sign Out</a>}\r\n          </NavLinks>\r\n          <BurgerWrapper>\r\n            <BurgerMenu\r\n              navbarState={props.navbarState} \r\n              handleNavbar={props.handleNavbar}\r\n            />\r\n          </BurgerWrapper>\r\n        </FlexContainer>\r\n      </NavBar>\r\n      <CollapseMenu \r\n        navbarState={props.navbarState} \r\n        handleNavbar={props.handleNavbar}\r\n        loggedIn={props.loggedIn}\r\n      />\r\n   </>\r\n   \r\n  )\r\n}\r\n\r\nexport default Navbar\r\n\r\nconst NavBar = styled(animated.nav)`\r\n  position: fixed;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  background: #848181;\r\n  z-index: 1;\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nconst FlexContainer = styled.div`\r\n  max-width: 90%;\r\n  display: flex;\r\n  margin: auto;\r\n  padding: 0 2rem;;\r\n  justify-content: space-between;\r\n  height: 5rem;\r\n`;\r\n\r\nconst NavLinks = styled(animated.ul)`\r\n  justify-self: end;\r\n  list-style-type: none;\r\n  margin: auto 0;\r\n\r\n  & a {\r\n    color: #232121;\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n    border-bottom: 1px solid transparent;\r\n    margin: 0 1.5rem;\r\n    transition: all 300ms linear 0s;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      color: #faf6f6;\r\n      border-bottom: 1px solid #232121;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BurgerWrapper = styled.div`\r\n  margin: auto 0;\r\n\r\n  @media (min-width: 769px) {\r\n    display: none;\r\n  }\r\n`;\r\n","C:\\Re\\recipe-finder\\recipe\\src\\Routing.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\About\\About.js",["102","103"],"/*\r\nFile: About.js\r\n?: Design for elements in About/Contact. \r\n*/\r\nimport './About.css';\r\nimport React from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass About extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        \r\n        <div className=\"title\">\r\n          <h1> About Us! </h1>\r\n        </div>\r\n\r\n      <div className=\"break\"></div>\r\n      <div className=\"page\"></div>\r\n       <div className=\"row\">\r\n        <Card className=\"content\">\r\n        <Card.Title className=\"name\"> Lucas </Card.Title>\r\n            <Card.Text className=\"text\"> Here is some informatino about me. I am a person. I do\r\n              things for fun. I like places and things.</Card.Text>\r\n              <Card.Title className=\"contact\"> Contact: Lucas.Keizur@cwu.edu </Card.Title>\r\n        </Card>\r\n\r\n        <Card className=\"content\">\r\n        <Card.Title className=\"name\"> Lucas </Card.Title>\r\n            <Card.Text className=\"text\"> Here is some informatino about me. I am a person. I do\r\n              things for fun. I like places and things.</Card.Text>\r\n              <Card.Title className=\"contact\"> Contact: Lucas.Keizur@cwu.edu </Card.Title>\r\n        </Card>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n        <Card className=\"content\">\r\n        <Card.Title className=\"name\"> Lucas </Card.Title>\r\n            <Card.Text className=\"text\"> Here is some informatino about me. I am a person. I do\r\n              things for fun. I like places and things.</Card.Text>\r\n              <Card.Title className=\"contact\"> Contact: Lucas.Keizur@cwu.edu </Card.Title>\r\n        </Card>\r\n\r\n        <Card className=\"content\">\r\n        <Card.Title className=\"name\"> Lucas </Card.Title>\r\n            <Card.Text className=\"text\"> Here is some informatino about me. I am a person. I do\r\n              things for fun. I like places and things.</Card.Text>\r\n              <Card.Title className=\"contact\"> Contact: Lucas.Keizur@cwu.edu </Card.Title>\r\n        </Card>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n        <Card className=\"content\">\r\n        <Card.Title className=\"name\"> Lucas </Card.Title>\r\n            <Card.Text className=\"text\"> Here is some informatino about me. I am a person. I do\r\n              things for fun. I like places and things.</Card.Text>\r\n              <Card.Title className=\"contact\"> Contact: Lucas.Keizur@cwu.edu </Card.Title>\r\n        </Card>\r\n\r\n        <Card className=\"content\">\r\n        <Card.Title className=\"name\"> Lucas </Card.Title>\r\n            <Card.Text className=\"text\"> Here is some informatino about me. I am a person. I do\r\n              things for fun. I like places and things.</Card.Text>\r\n              <Card.Title className=\"contact\"> Contact: Lucas.Keizur@cwu.edu </Card.Title>\r\n        </Card>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <Card className=\"content\">\r\n          <Card.Title className=\"name\"> Mission Statement </Card.Title>\r\n            <Card.Text className=\"text\"> We believe in food.</Card.Text>\r\n          </Card>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default About;\r\n\r\n/*\r\n       <Card className=\"content\">\r\n          <Card.Header className=\"title\"> About Us </Card.Header>\r\n          <Card.Body>\r\n\r\n            <Card.Title className=\"name\"> Lucas </Card.Title>\r\n            <Card.Text className=\"text\"> Here is some informatino about me. I am a person. I do\r\n              things for fun. I like places and things.</Card.Text>\r\n\r\n              <Card.Title className=\"name\"> Kirsten </Card.Title>\r\n            <Card.Text className=\"text\"> Here is some informatino about me. I am a person. I do\r\n              things for fun. I like places and things.</Card.Text>\r\n\r\n              <Card.Title className=\"name\"> Natalia </Card.Title>\r\n            <Card.Text className=\"text\"> Here is some informatino about me. I am a person. I do\r\n              things for fun. I like places and things.</Card.Text>\r\n\r\n              <Card.Title className=\"name\"> Jordan </Card.Title>\r\n            <Card.Text className=\"text\"> Here is some informatino about me. I am a person. I do\r\n              things for fun. I like places and things.</Card.Text>\r\n\r\n              <Card.Title className=\"name\"> Nate </Card.Title>\r\n            <Card.Text className=\"text\"> Here is some informatino about me. I am a person. I do\r\n              things for fun. I like places and things.</Card.Text>\r\n\r\n              <Card.Title className=\"name\"> Alek </Card.Title>\r\n            <Card.Text className=\"text\"> Here is some informatino about me. I am a person. I do\r\n              things for fun. I like places and things.</Card.Text>\r\n\r\n          </Card.Body>\r\n\r\n        </Card> \r\n*/","C:\\Re\\recipe-finder\\recipe\\src\\components\\Navbar\\Brand.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\Navbar\\Menu.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\Navbar\\CollapseMenu.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\SignOut.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\Login.js",["104"],"/*\r\nFile: Login.js\r\n?: This is the login page. It contains a LoginForm to login.\r\n*/ \r\nimport React from 'react';\r\nimport LoginForm from './LoginForm';\r\nimport { useLoginStatus } from '../../LoginContext'\r\nimport './Login.css';\r\n\r\n//Think of something like this as an import\r\nvar authenticate = require('./AccountServices.js');\r\n\r\n\r\nfunction Login() {\r\n    \r\n    //Get ability to change loginStatus (from LoginContext) \r\n    const { toggleLoginStatus } = useLoginStatus();\r\n\r\n    //Comes email and password with userdatabase (handled in AccountServices.js)\r\n    const Login = (email, password) => {\r\n        //For monitoring, should be removed later on\r\n        console.log(email);\r\n        \r\n        //Get authentication results and either change the loginStatus or give an alert for incorrect information\r\n        var Promise = authenticate.authenticate(email, password).then((result) => {\r\n            if (result) {\r\n                toggleLoginStatus(email);\r\n                window.location.reload(false);\r\n               \r\n            } else {\r\n                alert(\"Username/Password Combination Incorrect\");\r\n            }\r\n        });\r\n    }\r\n\r\n    //Simlpy returns a LoginForm which is defined in LoginForm.js\r\n    return (\r\n        <>\r\n            <LoginForm Login={Login} /> \r\n        </>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default Login; ","C:\\Re\\recipe-finder\\recipe\\src\\components\\pages\\Home.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\AccountServices.js",["105"],"/*\r\nFile: AccountServices.js\r\n?: This is where our user registration, login authentication, and hashing passwords occur. \r\n*/\r\n\r\n// import React, { useState, createContext } from 'react';\r\n// import { useLoginStatus } from '../../LoginContext'\r\nconst bcrypt = require('bcryptjs');\r\n//Need to do: npm install bcryptjs in your recipe directory through terminal\r\n\r\n//Export the functions\r\nexport {\r\n    authenticate,\r\n    register\r\n};\r\n\r\n//Test user\r\nconst adminUser = {\r\n    name: \"Alek\",\r\n    email: \"test@test.test\",\r\n    password: \"12345\"\r\n}\r\n\r\n//Currently empty, but this is where registering users will occur. Need backend\r\nasync function register(name, email, password) {\r\n    \r\n}\r\n\r\n//Determines if params email and password match users in our database.\r\n//Currently only compares to the test case! \r\nasync function authenticate(email, password) {\r\n    if (email === adminUser.email && password === adminUser.password) {\r\n        console.log(\"Success! Log in.\");\r\n        return true;\r\n    } else {\r\n        console.log(\"Unsuccessful log in.\");\r\n        return false;\r\n    }\r\n}\r\n\r\n//Returns hash of a password. Used to incrypt passwords for safe keeping.\r\n//Note that if you wanted to compare a bcrypt hash with a string, you can call \r\n//              bcrypt.compare(password, hashedPassword);\r\n//But for our purposes, we can search our database for the username then use this compare! \r\n//This would be done in authenticate\r\nconst hashPassword = async (password, saltRounds = 10) => {\r\n    try {\r\n        // create salt\r\n        const salt = await bcrypt.genSalt(saltRounds);\r\n\r\n        // Hash\r\n        return await bcrypt.hash(password, salt);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    \r\n    return null;\r\n}","C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\LoginForm.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\Ingredients\\Ingredients.js",["106","107"],"import React, {useState, useEffect} from 'react';\r\nimport SearchBar from './IngredientsForm';\r\n//import IngredientList from './IngredientsList'\r\n\r\n\r\nconst SearchPage = (/*props*/) => {\r\n    /*const [input, setInput] = useState('');\r\n    const [ingredientListDefault, setIngredientListDefault] = useState();\r\n    const [ingredientList, setIngredientList] = useState();\r\n\r\n    const fetchData = async () => {\r\n        return await fetch('https://api.nal.usda.gov/fdc/v1/foods/search?api_key=C3Dr3Own7tM1ZoyfvO5Gc8qCPlGSxS3nzWbFu1PD')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setIngredientList(data);\r\n                setIngredientListDefault(data);\r\n            });\r\n    }\r\n\r\n    const updateInput = async (input) => {\r\n        const filtered = ingredientListDefault.filter(ingredient => {\r\n            return ingredient.description.toLowerCase().includes(input.toLowerCae())\r\n        })\r\n        setInput(input);\r\n        setIngredientList(filtered);\r\n    }\r\n\r\n    useEffect(() => {fetchData()}, []);\r\n    <SearchBar input={input}\r\n        onChange={updateInput} />\r\n        <IngredientList ingredientList={ingredientList}\r\n    */\r\n    return(\r\n        <>\r\n        <SearchBar/>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default SearchPage;","C:\\Re\\recipe-finder\\recipe\\src\\components\\Ingredients\\IngredientsForm.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\Pantry\\Pantry.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\index.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\SignUp.js",[],"C:\\Re\\recipe-finder\\recipe\\src\\components\\Login\\SignUpForm.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":9,"column":10,"nodeType":"114","messageId":"115","endLine":9,"endColumn":16},{"ruleId":"112","severity":1,"message":"116","line":9,"column":18,"nodeType":"114","messageId":"115","endLine":9,"endColumn":23},{"ruleId":"112","severity":1,"message":"117","line":9,"column":25,"nodeType":"114","messageId":"115","endLine":9,"endColumn":31},{"ruleId":"112","severity":1,"message":"118","line":10,"column":26,"nodeType":"114","messageId":"115","endLine":10,"endColumn":46},{"ruleId":"112","severity":1,"message":"119","line":7,"column":15,"nodeType":"114","messageId":"115","endLine":7,"endColumn":21},{"ruleId":"112","severity":1,"message":"120","line":8,"column":8,"nodeType":"114","messageId":"115","endLine":8,"endColumn":16},{"ruleId":"112","severity":1,"message":"121","line":25,"column":13,"nodeType":"114","messageId":"115","endLine":25,"endColumn":20},{"ruleId":"112","severity":1,"message":"122","line":46,"column":7,"nodeType":"114","messageId":"115","endLine":46,"endColumn":19},{"ruleId":"112","severity":1,"message":"123","line":1,"column":16,"nodeType":"114","messageId":"115","endLine":1,"endColumn":24},{"ruleId":"112","severity":1,"message":"124","line":1,"column":26,"nodeType":"114","messageId":"115","endLine":1,"endColumn":35},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'useLoginUpdateStatus' is defined but never used.","'Button' is defined but never used.","'ReactDOM' is defined but never used.","'Promise' is assigned a value but never used.","'hashPassword' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]